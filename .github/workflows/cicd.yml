name: Stock Data Ingestor Build / Test / Deploy
run-name: ${{ github.event.repository.updated_at}}_${{ github.run_number }}_${{ github.ref }}
on:
  workflow_dispatch:
    branches:
      - '**'
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - dev
      - main
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        shell: pwsh
        run: |
          $matrix = @()
          $apps = "$($env:APP_NAMES)" -split ','
          foreach($app in $apps){
            $matrix += "{`"app`":`"$app`"}"
          }
          Write-Host("::set-output name=matrix::{`"include`":[$($matrix -join ',')]}")

  test:
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Test the application
        uses: piroinno/stock-data-app-automation/test/poetry/@init
        with:
          packagefeed: ${{ secrets.AZURE_PYPI_FEED }}
          packagefeedpassword: ${{ secrets.AZURE_PYPI_PASSWORD }}
          flagsmithenvironmentkey: ${{ secrets.FLAGSMITH_ENVIRONMENT_KEY }}
          testdatabasehost: localhost
          testdatabasepassword: ${{ secrets.POSTGRES_PASSWORD }}

  build:
    runs-on: ubuntu-latest
    needs: [prepare, test]
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Package the application
        uses: piroinno/stock-data-app-automation/build/poetry/@init
        with:
          packagefeed: ${{ secrets.AZURE_PYPI_FEED }}
          packagefeedpassword: ${{ secrets.AZURE_PYPI_PASSWORD }}
      - name: Build docker image
        uses: piroinno/stock-data-app-automation/build/docker/@init
        with:
          appfolder: ${{ matrix.app }}
          applicationbuildphase: "build"
          automatedrun: "true"
          isbuilddryrun: "true"
          applicationbuildtags: "${{ env.ENVIRONMENT }},latest"
          applicationbuildimagename: "${{ matrix.app }}"
          applicationbuildimageregistry: "${{ secrets.ACR_LOGIN_SERVER }}"
          applicationbuilddockerfileargs: "FLAGSMITH_ENVIRONMENT_KEY=${{ secrets.FLAGSMITH_ENVIRONMENT_KEY }}"
          applicationbuilddefaulttag: "${{ github.sha }}"
          applicationbuildimagerepository: "${{ env.APP_LANDING_ZONE}}/application"
          applicationbuilddockerfile: "Dockerfile"

          